--
-- A hint submitted by a user: Oracle DB MUST be created as "shared" and the
-- job_queue_processes parameter  must be greater than 2, otherwise a DB lock
-- will happen.   However, these settings are pretty much standard after any
-- Oracle install, so most users need not worry about this.
--
-- IdentityIQ NOTES
--
-- Since things like Application names can make their way into TaskSchedule
-- object names we have to be careful with the sizes of various Quartz name
-- columns.  The original size was 80, this has been raised to 2000.  The
-- maximum size of a varchar2 in Oracle is 4000.
--
CREATE TABLE identityiq.qrtz221_job_details
(
    SCHED_NAME VARCHAR2(120) NOT NULL,
    JOB_NAME  VARCHAR2(200) NOT NULL,
    JOB_GROUP VARCHAR2(200) NOT NULL,
    DESCRIPTION VARCHAR2(250) NULL,
    JOB_CLASS_NAME   VARCHAR2(250) NOT NULL,
    IS_DURABLE VARCHAR2(1) NOT NULL,
    IS_NONCONCURRENT VARCHAR2(1) NOT NULL,
    IS_UPDATE_DATA VARCHAR2(1) NOT NULL,
    REQUESTS_RECOVERY VARCHAR2(1) NOT NULL,
    JOB_DATA BLOB NULL,
    CONSTRAINT QRTZ221_JOB_DETAILS_PK PRIMARY KEY (SCHED_NAME,JOB_NAME,JOB_GROUP)
);

CREATE TABLE identityiq.qrtz221_triggers
(
    SCHED_NAME VARCHAR2(120) NOT NULL,
    TRIGGER_NAME VARCHAR2(200) NOT NULL,
    TRIGGER_GROUP VARCHAR2(200) NOT NULL,
    JOB_NAME  VARCHAR2(200) NOT NULL,
    JOB_GROUP VARCHAR2(200) NOT NULL,
    DESCRIPTION VARCHAR2(250) NULL,
    NEXT_FIRE_TIME NUMBER(13) NULL,
    PREV_FIRE_TIME NUMBER(13) NULL,
    PRIORITY NUMBER(13) NULL,
    TRIGGER_STATE VARCHAR2(16) NOT NULL,
    TRIGGER_TYPE VARCHAR2(8) NOT NULL,
    START_TIME NUMBER(13) NOT NULL,
    END_TIME NUMBER(13) NULL,
    CALENDAR_NAME VARCHAR2(200) NULL,
    MISFIRE_INSTR NUMBER(2) NULL,
    JOB_DATA BLOB NULL,
    CONSTRAINT QRTZ221_TRIGGERS_PK PRIMARY KEY (SCHED_NAME,TRIGGER_NAME,TRIGGER_GROUP),
    CONSTRAINT QRTZ221_TRIGGER_TO_JOBS_FK FOREIGN KEY (SCHED_NAME,JOB_NAME,JOB_GROUP)
      REFERENCES identityiq.qrtz221_job_details(SCHED_NAME,JOB_NAME,JOB_GROUP)
);

CREATE TABLE identityiq.qrtz221_simple_triggers
(
    SCHED_NAME VARCHAR2(120) NOT NULL,
    TRIGGER_NAME VARCHAR2(200) NOT NULL,
    TRIGGER_GROUP VARCHAR2(200) NOT NULL,
    REPEAT_COUNT NUMBER(7) NOT NULL,
    REPEAT_INTERVAL NUMBER(12) NOT NULL,
    TIMES_TRIGGERED NUMBER(10) NOT NULL,
    CONSTRAINT QRTZ221_SMPL_TRIG_PK PRIMARY KEY (SCHED_NAME,TRIGGER_NAME,TRIGGER_GROUP),
    CONSTRAINT QRTZ221_SMPL_TRIG_TO_TRIG_FK FOREIGN KEY (SCHED_NAME,TRIGGER_NAME,TRIGGER_GROUP)
	REFERENCES identityiq.qrtz221_triggers(SCHED_NAME,TRIGGER_NAME,TRIGGER_GROUP)
);

CREATE TABLE identityiq.qrtz221_cron_triggers
(
    SCHED_NAME VARCHAR2(120) NOT NULL,
    TRIGGER_NAME VARCHAR2(200) NOT NULL,
    TRIGGER_GROUP VARCHAR2(200) NOT NULL,
    CRON_EXPRESSION VARCHAR2(120) NOT NULL,
    TIME_ZONE_ID VARCHAR2(80),
    CONSTRAINT QRTZ221_CRON_TRIG_PK PRIMARY KEY (SCHED_NAME,TRIGGER_NAME,TRIGGER_GROUP),
    CONSTRAINT QRTZ221_CRON_TRIG_TO_TRIG_FK FOREIGN KEY (SCHED_NAME,TRIGGER_NAME,TRIGGER_GROUP)
      REFERENCES identityiq.qrtz221_triggers(SCHED_NAME,TRIGGER_NAME,TRIGGER_GROUP)
);

CREATE TABLE identityiq.qrtz221_simprop_triggers
(
    SCHED_NAME VARCHAR2(120) NOT NULL,
    TRIGGER_NAME VARCHAR2(200) NOT NULL,
    TRIGGER_GROUP VARCHAR2(200) NOT NULL,
    STR_PROP_1 VARCHAR2(512) NULL,
    STR_PROP_2 VARCHAR2(512) NULL,
    STR_PROP_3 VARCHAR2(512) NULL,
    INT_PROP_1 NUMBER(10) NULL,
    INT_PROP_2 NUMBER(10) NULL,
    LONG_PROP_1 NUMBER(13) NULL,
    LONG_PROP_2 NUMBER(13) NULL,
    DEC_PROP_1 NUMERIC(13,4) NULL,
    DEC_PROP_2 NUMERIC(13,4) NULL,
    BOOL_PROP_1 VARCHAR2(1) NULL,
    BOOL_PROP_2 VARCHAR2(1) NULL,
    CONSTRAINT QRTZ221_SIMPROP_TRIG_PK PRIMARY KEY (SCHED_NAME,TRIGGER_NAME,TRIGGER_GROUP),
    CONSTRAINT QRTZ221_SP_TRIG_TO_TRIG_FK FOREIGN KEY (SCHED_NAME,TRIGGER_NAME,TRIGGER_GROUP)
      REFERENCES identityiq.qrtz221_triggers(SCHED_NAME,TRIGGER_NAME,TRIGGER_GROUP)
);

CREATE TABLE identityiq.qrtz221_blob_triggers
(
    SCHED_NAME VARCHAR2(120) NOT NULL,
    TRIGGER_NAME VARCHAR2(200) NOT NULL,
    TRIGGER_GROUP VARCHAR2(200) NOT NULL,
    BLOB_DATA BLOB NULL,
    CONSTRAINT QRTZ221_BLOB_TRIG_PK PRIMARY KEY (SCHED_NAME,TRIGGER_NAME,TRIGGER_GROUP),
    CONSTRAINT QRTZ221_BLOB_TRIG_TO_TRIG_FK FOREIGN KEY (SCHED_NAME,TRIGGER_NAME,TRIGGER_GROUP)
        REFERENCES identityiq.qrtz221_triggers(SCHED_NAME,TRIGGER_NAME,TRIGGER_GROUP)
);

CREATE TABLE identityiq.qrtz221_calendars
(
    SCHED_NAME VARCHAR2(120) NOT NULL,
    CALENDAR_NAME  VARCHAR2(200) NOT NULL,
    CALENDAR BLOB NOT NULL,
    CONSTRAINT QRTZ221_CALENDARS_PK PRIMARY KEY (SCHED_NAME,CALENDAR_NAME)
);

CREATE TABLE identityiq.qrtz221_paused_trigger_grps
(
    SCHED_NAME VARCHAR2(120) NOT NULL,
    TRIGGER_GROUP  VARCHAR2(200) NOT NULL,
    CONSTRAINT QRTZ221_PAUSED_TRIG_GRPS_PK PRIMARY KEY (SCHED_NAME,TRIGGER_GROUP)
);

CREATE TABLE identityiq.qrtz221_fired_triggers
(
    SCHED_NAME VARCHAR2(120) NOT NULL,
    ENTRY_ID VARCHAR2(95) NOT NULL,
    TRIGGER_NAME VARCHAR2(200) NOT NULL,
    TRIGGER_GROUP VARCHAR2(200) NOT NULL,
    INSTANCE_NAME VARCHAR2(200) NOT NULL,
    FIRED_TIME NUMBER(13) NOT NULL,
    SCHED_TIME NUMBER(13) NOT NULL,
    PRIORITY NUMBER(13) NOT NULL,
    STATE VARCHAR2(16) NOT NULL,
    JOB_NAME VARCHAR2(200) NULL,
    JOB_GROUP VARCHAR2(200) NULL,
    IS_NONCONCURRENT VARCHAR2(1) NULL,
    REQUESTS_RECOVERY VARCHAR2(1) NULL,
    CONSTRAINT QRTZ221_FIRED_TRIGGER_PK PRIMARY KEY (SCHED_NAME,ENTRY_ID)
);

CREATE TABLE identityiq.qrtz221_scheduler_state
(
    SCHED_NAME VARCHAR2(120) NOT NULL,
    INSTANCE_NAME VARCHAR2(200) NOT NULL,
    LAST_CHECKIN_TIME NUMBER(13) NOT NULL,
    CHECKIN_INTERVAL NUMBER(13) NOT NULL,
    CONSTRAINT QRTZ221_SCHEDULER_STATE_PK PRIMARY KEY (SCHED_NAME,INSTANCE_NAME)
);

CREATE TABLE identityiq.qrtz221_locks
(
    SCHED_NAME VARCHAR2(120) NOT NULL,
    LOCK_NAME  VARCHAR2(40) NOT NULL,
    CONSTRAINT QRTZ221_LOCKS_PK PRIMARY KEY (SCHED_NAME,LOCK_NAME)
);

INSERT INTO identityiq.qrtz221_locks VALUES('QuartzScheduler', 'TRIGGER_ACCESS');
INSERT INTO identityiq.qrtz221_locks VALUES('QuartzScheduler', 'JOB_ACCESS');
INSERT INTO identityiq.qrtz221_locks VALUES('QuartzScheduler', 'CALENDAR_ACCESS');
INSERT INTO identityiq.qrtz221_locks VALUES('QuartzScheduler', 'STATE_ACCESS');
INSERT INTO identityiq.qrtz221_locks VALUES('QuartzScheduler', 'MISFIRE_ACCESS');

CREATE INDEX identityiq.idx_qrtz221_j_req_recovery ON identityiq.qrtz221_job_details(SCHED_NAME,REQUESTS_RECOVERY);
CREATE INDEX identityiq.idx_qrtz221_j_grp ON identityiq.qrtz221_job_details(SCHED_NAME,JOB_GROUP);

CREATE INDEX identityiq.idx_qrtz221_t_j ON identityiq.qrtz221_triggers(SCHED_NAME,JOB_NAME,JOB_GROUP);
CREATE INDEX identityiq.idx_qrtz221_t_jg ON identityiq.qrtz221_triggers(SCHED_NAME,JOB_GROUP);
CREATE INDEX identityiq.idx_qrtz221_t_c ON identityiq.qrtz221_triggers(SCHED_NAME,CALENDAR_NAME);
CREATE INDEX identityiq.idx_qrtz221_t_g ON identityiq.qrtz221_triggers(SCHED_NAME,TRIGGER_GROUP);
CREATE INDEX identityiq.idx_qrtz221_t_state ON identityiq.qrtz221_triggers(SCHED_NAME,TRIGGER_STATE);
CREATE INDEX identityiq.idx_qrtz221_t_n_state ON identityiq.qrtz221_triggers(SCHED_NAME,TRIGGER_NAME,TRIGGER_GROUP,TRIGGER_STATE);
CREATE INDEX identityiq.idx_qrtz221_t_n_g_state ON identityiq.qrtz221_triggers(SCHED_NAME,TRIGGER_GROUP,TRIGGER_STATE);
CREATE INDEX identityiq.idx_qrtz221_t_next_fire_time ON identityiq.qrtz221_triggers(SCHED_NAME,NEXT_FIRE_TIME);
CREATE INDEX identityiq.idx_qrtz221_t_nft_st ON identityiq.qrtz221_triggers(SCHED_NAME,TRIGGER_STATE,NEXT_FIRE_TIME);
CREATE INDEX identityiq.idx_qrtz221_t_nft_misfire ON identityiq.qrtz221_triggers(SCHED_NAME,MISFIRE_INSTR,NEXT_FIRE_TIME);
CREATE INDEX identityiq.idx_qrtz221_t_nft_st_misfire ON identityiq.qrtz221_triggers(SCHED_NAME,MISFIRE_INSTR,NEXT_FIRE_TIME,TRIGGER_STATE);
CREATE INDEX identityiq.idx_qrtz221_t_nft_st_mf_grp ON identityiq.qrtz221_triggers(SCHED_NAME,MISFIRE_INSTR,NEXT_FIRE_TIME,TRIGGER_GROUP,TRIGGER_STATE);

CREATE INDEX identityiq.idx_qrtz221_ft_trig_inst_name ON identityiq.qrtz221_fired_triggers(SCHED_NAME,INSTANCE_NAME);
CREATE INDEX identityiq.idx_qrtz221_ft_inst_req_rcvry ON identityiq.qrtz221_fired_triggers(SCHED_NAME,INSTANCE_NAME,REQUESTS_RECOVERY);
CREATE INDEX identityiq.idx_qrtz221_ft_j_g ON identityiq.qrtz221_fired_triggers(SCHED_NAME,JOB_NAME,JOB_GROUP);
CREATE INDEX identityiq.idx_qrtz221_ft_jg ON identityiq.qrtz221_fired_triggers(SCHED_NAME,JOB_GROUP);
CREATE INDEX identityiq.idx_qrtz221_ft_t_g ON identityiq.qrtz221_fired_triggers(SCHED_NAME,TRIGGER_NAME,TRIGGER_GROUP);
CREATE INDEX identityiq.idx_qrtz221_ft_tg ON identityiq.qrtz221_fired_triggers(SCHED_NAME,TRIGGER_GROUP);

commit;
